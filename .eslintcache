[{"G:\\111PET PROJ\\release_calendar\\src\\index.tsx":"1","G:\\111PET PROJ\\release_calendar\\src\\App.tsx":"2","G:\\111PET PROJ\\release_calendar\\src\\components\\Calendar.tsx":"3","G:\\111PET PROJ\\release_calendar\\src\\store\\initStore.ts":"4"},{"size":346,"mtime":1612024007356,"results":"5","hashOfConfig":"6"},{"size":526,"mtime":1612023968368,"results":"7","hashOfConfig":"6"},{"size":3351,"mtime":1612022090997,"results":"8","hashOfConfig":"6"},{"size":546,"mtime":1612023807272,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"507g3k",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"G:\\111PET PROJ\\release_calendar\\src\\index.tsx",[],"G:\\111PET PROJ\\release_calendar\\src\\App.tsx",[],"G:\\111PET PROJ\\release_calendar\\src\\components\\Calendar.tsx",["20"],"import React from \"react\";\r\nimport * as dateFns from \"date-fns\";\r\nimport { ru, uk } from 'date-fns/locale'\r\n\r\nclass Calendar extends React.Component {\r\n  state = {\r\n    currentMonth: new Date(),\r\n    selectedDate: new Date(),\r\n    currentLocale: uk,\r\n  };\r\n\r\n  renderHeader() {\r\n    const dateFormat = \"MMMM yyyy\";\r\n    const {currentLocale} = this.state;\r\n\r\n    return (\r\n      <div className=\"header row flex-middle\">\r\n        <div className=\"col col-start\">\r\n          <div className=\"icon\" onClick={this.prevMonth}>\r\n            chevron_left\r\n          </div>\r\n        </div>\r\n        <div className=\"col col-center\">\r\n          <span>{dateFns.format(this.state.currentMonth, dateFormat, {locale: currentLocale})}</span>\r\n        </div>\r\n        <div className=\"col col-end\" onClick={this.nextMonth}>\r\n          <div className=\"icon\">chevron_right</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDays() {\r\n    const {currentLocale} = this.state;\r\n\r\n    const dateFormat = \"iiii\";\r\n    const days = [];\r\n\r\n    let startDate = dateFns.startOfWeek(this.state.currentMonth);\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      days.push(\r\n        <div className=\"col col-center\" key={i}>\r\n          {dateFns.format(dateFns.addDays(startDate, i), dateFormat, {locale: currentLocale})}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div className=\"days row\">{days}</div>;\r\n  }\r\n\r\n  renderCells() {\r\n    const { currentMonth, selectedDate } = this.state;\r\n    const monthStart = dateFns.startOfMonth(currentMonth);\r\n    const monthEnd = dateFns.endOfMonth(monthStart);\r\n    const startDate = dateFns.startOfWeek(monthStart);\r\n    const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n    const dateFormat = \"d\";\r\n    const rows = [];\r\n\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = \"\";\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n        formattedDate = dateFns.format(day, dateFormat);\r\n        const cloneDay = day;\r\n        days.push(\r\n          <div\r\n            className={`col cell ${\r\n              !dateFns.isSameMonth(day, monthStart)\r\n                ? \"disabled\"\r\n                : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"\r\n            }`}\r\n            key={String(day)}\r\n            onClick={() => {\r\n              console.log(cloneDay);\r\n              \r\n              this.onDateClick(cloneDay);\r\n\r\n            }}\r\n          >\r\n            <span className=\"number\">{formattedDate}</span>\r\n            <span className=\"bg\">{formattedDate}</span>\r\n          </div>\r\n        );\r\n        day = dateFns.addDays(day, 1);\r\n      }\r\n      rows.push(\r\n        <div className=\"row\" key={String(day)}>\r\n          {days}\r\n        </div>\r\n      );\r\n      days = [];\r\n    }\r\n    return <div className=\"body\">{rows}</div>;\r\n  }\r\n\r\n  onDateClick = (day: Date) => {\r\n    this.setState({\r\n      selectedDate: day\r\n    });\r\n  };\r\n\r\n  nextMonth = () => {\r\n    this.setState({\r\n      currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\r\n    });\r\n  };\r\n\r\n  prevMonth = () => {\r\n    this.setState({\r\n      currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calendar\">\r\n        {this.renderHeader()}\r\n        {this.renderDays()}\r\n        {this.renderCells()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;",["21","22"],"G:\\111PET PROJ\\release_calendar\\src\\store\\initStore.ts",[],{"ruleId":"23","severity":1,"message":"24","line":3,"column":10,"nodeType":"25","messageId":"26","endLine":3,"endColumn":12},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},"@typescript-eslint/no-unused-vars","'ru' is defined but never used.","Identifier","unusedVar","no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-global-assign","no-unsafe-negation"]